repositories:
  - name: grafana
    url: https://grafana.github.io/helm-charts

releases:

  - name: promtail
    namespace: monitoring
    chart: grafana/promtail
    version: 6.16.6
    values:
      - config:
          clients:
            - url: http://loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push
              tenant_id: 1

      - tolerations:
          - key: node-role
            operator: Equal
            value: infra
            effect: NoSchedule

  - name: loki
    namespace: monitoring
    chart: grafana/loki
    version: 6.23.0
    values:
      - loki:
          auth_enabled: false
          commonConfig:
            replication_factor: 1
          schemaConfig:
            configs:
              - from: "2024-04-01"
                store: tsdb
                object_store: s3
                schema: v13
                index:
                  prefix: loki_index_
                  period: 24h
          storage_config:
            aws:
              region: ru-central
              bucketnames: infra-loki
              s3forcepathstyle: false
          pattern_ingester:
            enabled: true
          limits_config:
            allow_structured_metadata: true
            volume_enabled: true
            retention_period: 672h # 28 days retention

          storage:
            type: s3
            bucketNames:
              chunks: infra-loki
              ruler: infra-loki
              admin: infra-loki
            s3:
              s3: s3://**:**@storage.yandexcloud.net/infra-loki
              s3ForcePathStyle: false
              insecure: false
              http_config: { }
        # Disable minio storage
      - minio:
          enabled: false

      - singleBinary:
          replicas: 0

      - deploymentMode: SimpleScalable
      - backend:
          replicas: 1
          tolerations:
            - key: node-role
              operator: Equal
              value: infra
              effect: NoSchedule
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io
                        operator: In
                        values:
                          - infra
      - read:
          replicas: 1
          tolerations:
            - key: node-role
              operator: Equal
              value: infra
              effect: NoSchedule
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io
                        operator: In
                        values:
                          - infra
      - write:
          replicas: 1
          tolerations:
            - key: node-role
              operator: Equal
              value: infra
              effect: NoSchedule
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io
                        operator: In
                        values:
                          - infra

      - ingester:
          replicas: 0
      - querier:
          replicas: 0
      - queryFrontend:
          replicas: 0
      - queryScheduler:
          replicas: 0
      - distributor:
          replicas: 0
      - compactor:
          replicas: 0
      - indexGateway:
          replicas: 0
      -  bloomCompactor:
          replicas: 0
      - bloomGateway:
          replicas: 0
      - gateway:
          service:
            port: 80
          tolerations:
            - key: node-role
              operator: Equal
              value: infra
              effect: NoSchedule
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io
                        operator: In
                        values:
                          - infra
      - resultsCache:
          tolerations:
            - key: node-role
              operator: Equal
              value: infra
              effect: NoSchedule
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io
                        operator: In
                        values:
                          - infra
      - chunksCache:
          tolerations:
            - key: node-role
              operator: Equal
              value: infra
              effect: NoSchedule
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: node-role.kubernetes.io
                        operator: In
                        values:
                          - infra
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
      - test:
          enabled: false
      - lokiCanary:
          enabled: false
  - name: grafana
    namespace: monitoring
    chart: grafana/grafana
    version: 8.7.0
    values:
      - tolerations:
          - key: node-role
            operator: Equal
            value: infra
            effect: NoSchedule
      - affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: node-role.kubernetes.io
                      operator: In
                      values:
                        - infra
      - ingress:
          enabled: false
      - dashboardProviders:
          dashboardproviders.yaml:
            apiVersion: 1
            providers:
              - name: 'nginx'
                orgId: 1
                folder: ''
                type: file
                options:
                  path: /var/lib/grafana/dashboards/nginx
      - dashboards:
          nginx:
            nginx-dashboard.json:
              url: https://raw.githubusercontent.com/nginxinc/nginx-prometheus-exporter/refs/heads/main/grafana/dashboard.json
      - datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Loki
                type: loki
                url: http://loki-gateway.monitoring.svc.cluster.local/
                jsonData:
                  timeout: 60
                  maxLines: 1000




